// gradle-multitool

plugins {
    id "com.gradle.plugin-publish" version "0.9.9"
    id 'groovy'
    id 'maven'
    id 'signing'
    id 'eclipse'
    id 'idea'
    
    // for building fat jar
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

group  = 'com.arakelian'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    // prefer locally built artifacts
    mavenLocal()

    // external maven repo is next preference
    mavenCentral()
    jcenter()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    
    // library is huge so we don't shadow it
    compile 'com.github.jengelman.gradle.plugins:shadow:2.0.4'

    // proguard is not available via Maven so this is very convenient    
    shadow files('lib/proguard.jar')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10'
}

uploadArchives {
    repositories {
        mavenLocal()
    }
}

pluginBundle {
    website = 'https://github.com/arakelian/gradle-multitool'
    vcsUrl = 'https://github.com/arakelian/gradle-multitool'
    description = 'Experimental plugin that provides several use utilities'
    tags = ['multitool','experimental']

    plugins {
        greetingsPlugin {
            id = 'com.arakelian.multitool'
            displayName = 'Gradle Multitool Plugin'
            tags = ['multitool', 'experimental']
        }
    }
}

// we're going to build a fat jar
jar.enabled = false

shadowJar {
    mergeServiceFiles()

    // we don't want poms for third-party stuff
    exclude 'META-INF/maven/**/*'

    // we are only shadowing 'shadow' dependencies
    configurations = [project.configurations.shadow]

    // we are replacing fat jar
    classifier = ''
}


// do not shadow until we have compiled everything
shadowJar.dependsOn(classes)

// make sure we shadow
assemble.dependsOn(shadowJar)
